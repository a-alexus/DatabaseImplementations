---------------------------------------------------------------------------
--
-- intset.sql-
--
---------------------------------------------------------------------------

CREATE FUNCTION intset_in(cstring)
   RETURNS intset
   AS '_OBJWD_/intset'
   LANGUAGE C IMMUTABLE STRICT;

CREATE FUNCTION intset_out(intset)
   RETURNS cstring
   AS '_OBJWD_/intset'
   LANGUAGE C IMMUTABLE STRICT;


CREATE TYPE intset (
   internallength = VARIABLE,
   input = intset_in,
   output = intset_out,
   storage = extended
);


-----------------------------
-- Creating operators for the new type:
-----------------------------
CREATE FUNCTION intset_cardinality(intset)
        RETURNS integer
        AS '_OBJWD_/intset'
        LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR # (
        rightarg = intset,
        procedure = intset_cardinality
);



CREATE FUNCTION intset_member(integer, intset)
        RETURNS boolean
        AS '_OBJWD_/intset'
        LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR ? (
        leftarg = integer,
        rightarg = intset,
        procedure = intset_member,
        commutator = ?
);



CREATE FUNCTION intset_superset(intset, intset)
        RETURNS boolean
        AS '_OBJWD_/intset'
        LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR >@ (
        leftarg = intset,
        rightarg = intset,
        procedure = intset_superset,
        commutator = >@
);



CREATE FUNCTION intset_subset(intset, intset)
        RETURNS boolean
        AS '_OBJWD_/intset'
        LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR  @< (
        leftarg = intset,
        rightarg = intset,
        procedure = intset_subset,
        commutator = @<
);



CREATE FUNCTION intset_eq(intset, intset)
        RETURNS boolean
        AS '_OBJWD_/intset'
        LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR  = (
        leftarg = intset,
        rightarg = intset,
        procedure = intset_eq,
        commutator = =
);



CREATE FUNCTION intset_neq(intset, intset)
        RETURNS boolean
        AS '_OBJWD_/intset'
        LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR  <> (
        leftarg = intset,
        rightarg = intset,
        procedure = intset_neq,
        commutator = <>
);



CREATE FUNCTION intset_intersection(intset, intset)
        RETURNS intset
        AS '_OBJWD_/intset'
        LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR  && (
        leftarg = intset,
        rightarg = intset,
        procedure = intset_intersection,
        commutator = &&
);



CREATE FUNCTION intset_union(intset, intset)
        RETURNS intset
        AS '_OBJWD_/intset'
        LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR  || (
        leftarg = intset,
        rightarg = intset,
        procedure = intset_union,
        commutator = ||
);



CREATE FUNCTION intset_disjunction(intset, intset)
        RETURNS intset
        AS '_OBJWD_/intset'
        LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR  !! (
        leftarg = intset,
        rightarg = intset,
        procedure = intset_disjunction,
        commutator = !!
);



CREATE FUNCTION intset_difference(intset, intset)
        RETURNS intset
        AS '_OBJWD_/intset'
        LANGUAGE C IMMUTABLE STRICT;

CREATE OPERATOR  - (
        leftarg = intset,
        rightarg = intset,
        procedure = intset_difference,
        commutator = -
);
